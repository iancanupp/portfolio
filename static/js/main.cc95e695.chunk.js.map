{"version":3,"sources":["components/Navbar/MenuItems.js","components/Navbar/Navbar.js","pages/Home.js","pages/skills/JavaAbout.js","pages/skills/SQLAbout.js","pages/skills/ReactAbout.js","pages/skills/PythonAbout.js","pages/DevSkills.js","pages/Contact.js","App.js","serviceWorker.js","index.js"],"names":["MenuItems","title","link","cName","Navbar","useState","clicked","setClicked","handleClick","className","onClick","map","item","index","key","to","href","Home","JavaAbout","id","activeClass","spy","smooth","offset","duration","SQLAbout","ReactAbout","PythonAbout","DevSkills","Contact","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cc95e695.chunk.js","sourcesContent":["export const MenuItems = [\r\n  {\r\n    title: \"Home\",\r\n    link: \"/\",\r\n    cName: \"nav-links\",\r\n  },\r\n  {\r\n    title: \"Development Skills\",\r\n    link: \"/skills\",\r\n    cName: \"nav-links\",\r\n  },\r\n  {\r\n    title: \"My Contacts\",\r\n    link: \"/contact\",\r\n    cName: \"nav-links\",\r\n  } /*,\r\n  {\r\n    title: \"My LinkedIn Profile\",\r\n    link: \"https://www.linkedin.com/in/ian-canupp-5b79b9141/\",\r\n    cName: \"nav-links-mobile\",\r\n  },*/,\r\n];\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MenuItems } from \"./MenuItems\";\r\nimport { Button } from \"../Button.js\";\r\nimport \"./Navbar.css\";\r\n\r\nconst Navbar = () => {\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setClicked(!clicked);\r\n  };\r\n\r\n  return (\r\n    <nav className=\"NavbarItems\">\r\n      <h1 className=\"navbar-logo\">\r\n        <i className=\"fab fa-react\"></i> Portfolio\r\n      </h1>\r\n      <div className=\"menu-icon\" onClick={handleClick}>\r\n        <i className={clicked ? \"fas fa-times\" : \"fas fa-bars\"}></i>\r\n      </div>\r\n      <ul className={clicked ? \"nav-menu active\" : \"nav-menu\"}>\r\n        {MenuItems.map((item, index) => {\r\n          return (\r\n            <li key={index}>\r\n              <Link to={item.link}>\r\n                <a\r\n                  className={item.cName}\r\n                  href={item.link}\r\n                  onClick={handleClick}\r\n                >\r\n                  {item.title}\r\n                </a>\r\n              </Link>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./Pages.css\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"home\">\r\n      <h1 className=\"header\">About Me</h1>\r\n      <p className=\"home-par\">\r\n        Hey! Thanks for checking out my portfolio, my name is Ian Canupp and I'm\r\n        a software engineer located in Cincinnati, Ohio. I graduated in May of\r\n        2019 with a B.S. in Computer Science from Centre College and since then,\r\n        have put a whole year of professional experience under my belt at a\r\n        company called Flooid. Throughout my education and early career, I find\r\n        that back end technologies such as Java, SQL and MongoDB have been a\r\n        large focus, and therefore a large strength of mine. However, quarantine\r\n        has given me ample time to jump head first into many different projects,\r\n        the latest of which is actually this very website. I'm constantly trying\r\n        to learn new things, which right now include Golang and more React,\r\n        something I'll talk in more depth about in the Developer Skills tab.\r\n      </p>\r\n      <p className=\"home-par\">\r\n        Outside of computer science I'm a huge basketball fan, specifically the\r\n        New York Knicks. I know that anyone who watches even a little NBA is\r\n        probably questioning my sanity and decision making, and of course it\r\n        should go without saying that I do the same. That said, my passion for\r\n        the sport has opened the way for me to discover the fascinating world of\r\n        analytics that lies beneath. It is my goal in the near future to combine\r\n        my accumulated understanding of these analytics with my front end\r\n        development knowledge to create a kind of player comparison app, so I\r\n        might be able to tell you -- with the data in front of me -- exactly how\r\n        and why the Knicks haven't been near playoffs in over a decade. In fact,\r\n        sports data analytics would be something of a dream job, but for now I'm\r\n        happy to figure it out in my apartment.\r\n      </p>\r\n      <p className=\"home-par\">\r\n        To cap off the at-a-glance version of myself, I did my study abroad in\r\n        the 'Heart of Europe,' Strasbourg, France. At risk of sounding like\r\n        every other student who spend any time outside the US, I had an amazing\r\n        abroad experience and continue to make efforts to maintain and build on\r\n        the French I studied in school.\r\n      </p>\r\n      <p className=\"home-par\">\r\n        With that cursory introduction, I hope you have a better idea of who I\r\n        am than a simple resume could tell you. Of course, if you have questions\r\n        about anything I've said here or anything I'll say in the next tab over,\r\n        I would be more than happy for you to reach out and I can clarify\r\n        anything I might have left overly vague. Again, thank you for taking the\r\n        time to navigate to this site to learn more about me, it is greatly\r\n        appreciated and I hope to hear from you soon.\r\n      </p>\r\n      <p className=\"sign\">- Ian Canupp</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-scroll\";\r\n\r\nconst JavaAbout = () => {\r\n  return (\r\n    <div className=\"about\" id=\"java\">\r\n      <h2 className=\"title\">\r\n        <i className=\"fab fa-java\"> Java</i>\r\n        <Link\r\n          className=\"to-top\"\r\n          activeClass=\"active\"\r\n          to=\"contents\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={-70}\r\n          duration={500}\r\n        >\r\n          <p className=\"return-text\">\r\n            <i className=\"arrow up\"></i>\r\n          </p>\r\n        </Link>\r\n      </h2>\r\n      <p className=\"content\">\r\n        I've been working with Java since Computer Science 101 my freshman year\r\n        of college, although more recently I've had the ongoing opportunity to\r\n        apply my skills as a software engineer at Flooid. This has allowed me to\r\n        work on brand new software features for their Vision Commerce Suite\r\n        (VCS), a retail commerce system designed specifically for large\r\n        retailers. Development for VCS has included work on retail point of sale\r\n        systems as well as headless self checkout software. Alongside product\r\n        development, I work on a small team to maintain innovative\r\n        implementations for various clients, including Trader Joes and Phillip\r\n        van Heusen.\r\n      </p>\r\n      <p className=\"content\">\r\n        Working in a product environment has been illuminating for numerous\r\n        reasons, and one of the most valuable lessons I've learned so far has\r\n        been how to design solutions with scaling in mind. In school, there was\r\n        nothing I ever built that required anything near the level of\r\n        abstraction I've learned to expect in my career. When working with such\r\n        vast, complex and interfacing code, it's as vital to insure you don't\r\n        break anything now as it is to make sure you won't break anything later.\r\n      </p>\r\n      <p className=\"content\">\r\n        Another skill I never knew I would lean so heavily on is the ability to\r\n        read code that I hadn't written. As I type this, I realize it isn't a\r\n        revolutionary revelation, nor one specific to Java, but it's one that\r\n        has become absolutely invaluable when debugging or parsing through call\r\n        heirarchies -- two things any good developer should be experienced at.\r\n      </p>\r\n      <p className=\"content\">\r\n        <a className=\"tags\">Skills: </a>\r\n        <a>\r\n          Java, Object-oriented Programming, Debugging, Eclipse, IntelliJ,\r\n          Maven, Tortoise, git\r\n        </a>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JavaAbout;\r\n","import React from \"react\";\r\nimport { Link } from \"react-scroll\";\r\n\r\nconst SQLAbout = () => {\r\n  return (\r\n    <div className=\"about\" id=\"sql\">\r\n      <h2 className=\"title\">\r\n        <div>\r\n          <i className=\"fas fa-database\"></i>\r\n          <a className=\"sql-title\"> Databases</a>\r\n        </div>\r\n        <Link\r\n          className=\"to-top\"\r\n          activeClass=\"active\"\r\n          to=\"contents\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={-70}\r\n          duration={500}\r\n        >\r\n          <p>\r\n            <i className=\"arrow up\"></i>\r\n          </p>\r\n        </Link>\r\n      </h2>\r\n      <p className=\"content\">\r\n        Coming in at a close second to Java, SQL is another language in which\r\n        I'm very proficient. Interestingly enough, before I had taken a course\r\n        or learned what a Relational Database Management System was, my summer\r\n        internship at Willis Towers Watson had me writing queries in C# to pull\r\n        data for an application they planned to build. As fun as that was, I've\r\n        come miles from where I stood that summer in terms of understanding and\r\n        working with RDBMSs. In college the following semester, I worked on a\r\n        team as part of a term-long project to design, build and populate a\r\n        database for a real-world company in Louisville. For the project we used\r\n        a LAMP stack (Linux, Apache, MySQL, PHP) to build an application to\r\n        present at the final. It was a bit rocky, but I learned a lot about\r\n        connecting a front facing application to a database, as well as how to\r\n        protect against injection attacks (Little Bobby Tables, anyone?).\r\n      </p>\r\n      <p className=\"content\">\r\n        Flash forward to today, and querying our database is usually part of my\r\n        day-to-day activities here, where we use both SQuirrel and DBeaver\r\n        RDBMSs. Whether I need to look up a certain promotion, find a loyalty\r\n        customer or hunt down a geography code, I'm making sure my SQL skills\r\n        don't get too rusty. On top of that, I've gained experience with the\r\n        document-oriented database program, MongoDB. With it I built a weekly\r\n        report generator for Trader Joes so that managers could select a date\r\n        and see figures such as categorized sales totals, gift card numbers and\r\n        overall profits. The majority of this was, of course, done in Java but\r\n        it served as a great tool in further understanding that pipeline between\r\n        database and application.\r\n      </p>\r\n      <p className=\"content\">\r\n        <a className=\"tags\">Skills: </a>\r\n        <a>SQL, MongoDB, SQuirrel SQL Client, DBeaver, Apache</a>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SQLAbout;\r\n","import React from \"react\";\r\nimport { Link } from \"react-scroll\";\r\n\r\nconst ReactAbout = () => {\r\n  return (\r\n    <div className=\"about\" id=\"react\">\r\n      <h2 className=\"title\">\r\n        <i className=\"fab fa-react\"> React</i>\r\n        <Link\r\n          className=\"to-top\"\r\n          activeClass=\"active\"\r\n          to=\"contents\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={-70}\r\n          duration={500}\r\n        >\r\n          <p>\r\n            <i className=\"arrow up\"></i>\r\n          </p>\r\n        </Link>\r\n      </h2>\r\n      <p className=\"content\">\r\n        At the moment there is no better testament to my React abilities than\r\n        this very website. In college classes, I was only taught the basics of\r\n        web development; things like HTML and very rudimentary PHP. Now that I\r\n        had some time on my hands I thought it was about time I extended my\r\n        skill set towards the other end of the stack. I am entirely self taught\r\n        on this front, going from a Hello React page to building projects like\r\n        this in about two weeks. In developing these apps (many which will never\r\n        see the light of day) I've become far more comfortable with CSS and a\r\n        number of react libraries.\r\n      </p>\r\n      <p className=\"content\">\r\n        Additionally, I've realized that the principles of web development\r\n        aren't so different from those I was already accustomed to. For example,\r\n        I found myself surpringly within my comfort zone when introduced to\r\n        certain JavaScript syntaxes (arrow functions, mapping, etc) that I had\r\n        struggled with in those afformentioned classes. And although it is not a\r\n        traditional class-based object-oriented language, JavaScript still lends\r\n        itself well to many of the habits I've developed in those more\r\n        'traditional' OOP languages like Java or C++.\r\n      </p>\r\n      <p className=\"content\">\r\n        I can confidently say I've had a lot of fun learning the tools of front\r\n        end development so far. As someone who heard a handful of JS horror\r\n        stories from old classmates or online forums, I'm proud of my progress.\r\n        Sure, when my align-content CSS fails to center for the millionth time,\r\n        it's a bit frustrating, but it's all part of the experience right? I\r\n        mentioned it briefly in the About Me section of this portfolio, but I am\r\n        working on a React App that pulls from a basketball API source and\r\n        allows you to compare players side by side. It's still in progress, but\r\n        it's been an incredible and fun learning experience for me - combining\r\n        two of my hobbies into one. I don't exactly intend for this website to\r\n        blow anyone away. Instead, I've built it to stand as a testiment to my\r\n        ability to\r\n      </p>\r\n      <ul className=\"content\">\r\n        <li>Learn things quickly and hands on, as well as</li>\r\n        <li>\r\n          Effectively communicate ideas in languages and areas I might be new to\r\n        </li>\r\n      </ul>\r\n      <p className=\"content\">\r\n        To both of those points, I believe I've succeeded.\r\n      </p>\r\n      <p className=\"content\">\r\n        <a className=\"tags\">Skills: </a>\r\n        <a>React, JavaScript, CSS, API</a>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReactAbout;\r\n","import React from \"react\";\r\nimport { Link } from \"react-scroll\";\r\n\r\nconst PythonAbout = () => {\r\n  return (\r\n    <div className=\"about\" id=\"python\">\r\n      <h2 className=\"title\">\r\n        <i className=\"fab fa-python\"> Python / Golang</i>\r\n        <Link\r\n          className=\"to-top\"\r\n          activeClass=\"active\"\r\n          to=\"contents\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={-70}\r\n          duration={500}\r\n        >\r\n          <p>\r\n            <i className=\"arrow up\"></i>\r\n          </p>\r\n        </Link>\r\n      </h2>\r\n      <p className=\"content\">\r\n        Since Python was the first language I ever learned, something about\r\n        coming back to that dynamically typed syntax - from something as rigid\r\n        as Java - just feels like putting the training wheels back on. Wanting a\r\n        bit of a challenge, I decided to pick up a langauge I had seen brought\r\n        up as a more powerful alternative to Python: Golang. After getting Hello\r\n        World down, I moved on to build a couple of programs to test my\r\n        knowledge. One I will link{\" \"}\r\n        <a href=\"https://github.com/iancanupp/sudoku\">here</a> is a sudoku\r\n        solver I wrote in Go which uses a backtracking algorithm to pass through\r\n        and solve any given (legal) sudoku board.{\" \"}\r\n      </p>{\" \"}\r\n      <p className=\"content\">\r\n        This was a twofold learning experience, the first of course being that\r\n        it was in Go, but then also understanding this new algorithm to utilize\r\n        it in my solution. For those unfamiliar, a backtracking algorithm is a\r\n        recursive algorithm which incrementally solves a puzzle one piece at a\r\n        time, abandoning a solution once that solution fails to satisfy the\r\n        constraints of the problem. For a sudoku, this means backtracking every\r\n        time you are put in a position where two of the same number occupy the\r\n        same row, column or box. The largest challenge I faced during this\r\n        exercise was determining when that crucial rule was broken. When my\r\n        input came in the form of a 2 dimensional text array, it was difficult\r\n        at first to figure out how to describe to the program what constituted a\r\n        'box.' Fortunately, I was able to overcome this by making a drawing in\r\n        my notes and tracing the code line by line to see how it should behave.\r\n        Eventually, a solution presented itself in the form of nested loops with\r\n        slightly different counters to consider the bounds of the sudoku board.\r\n      </p>\r\n      <p className=\"content\">\r\n        While I haven't delved deeper into Go to explore some of the things it\r\n        claims to be superior at, I enjoy doing small projects like this to\r\n        expand my skills and be able to communicate technically to others. For\r\n        me right now, nothing tops the comfort I feel in the simplicity of\r\n        Python, but I would not be surprised if that changed in the future as I\r\n        continue to push myself into new languages and areas of development.\r\n      </p>\r\n      <p className=\"content\">\r\n        <a className=\"tags\">Skills: </a>\r\n        <a>Python, Golang, Algorithms, Recursion</a>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PythonAbout;\r\n","import React from \"react\";\r\nimport JavaAbout from \"./skills/JavaAbout\";\r\nimport SQLAbout from \"./skills/SQLAbout\";\r\nimport ReactAbout from \"./skills/ReactAbout\";\r\nimport PythonAbout from \"./skills/PythonAbout\";\r\nimport \"./skills/skills.css\";\r\nimport { Link } from \"react-scroll\";\r\n\r\nconst DevSkills = () => {\r\n  return (\r\n    <div className=\"main-skills\">\r\n      <h2 className=\"table-header\" id=\"contents\">\r\n        Table of Contents\r\n      </h2>\r\n      <div className=\"scroll-links\">\r\n        <Link\r\n          className=\"link\"\r\n          activeClass=\"active\"\r\n          to=\"java\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={-70}\r\n          duration={500}\r\n        >\r\n          Java\r\n        </Link>\r\n        <Link\r\n          className=\"link\"\r\n          activeClass=\"active\"\r\n          to=\"sql\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={-70}\r\n          duration={500}\r\n        >\r\n          Databases\r\n        </Link>\r\n        <Link\r\n          className=\"link\"\r\n          activeClass=\"active\"\r\n          to=\"react\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={-70}\r\n          duration={500}\r\n        >\r\n          React\r\n        </Link>\r\n        <Link\r\n          className=\"link\"\r\n          activeClass=\"active\"\r\n          to=\"python\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={-70}\r\n          duration={500}\r\n        >\r\n          Python / Golang\r\n        </Link>\r\n      </div>\r\n      <JavaAbout />\r\n      <hr className=\"rounded\" />\r\n      <SQLAbout />\r\n      <hr className=\"rounded\" />\r\n      <ReactAbout />\r\n      <hr className=\"rounded\" />\r\n      <PythonAbout />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DevSkills;\r\n","import React from \"react\";\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <div className=\"contact\">\r\n      <div className=\"trad\">\r\n        <h1 className=\"email\">Email</h1>\r\n        <p className=\"email-content\"> canuppian@gmail.com</p>\r\n        <h1 className=\"phone\">Phone</h1>\r\n        <p className=\"phone-content\">(615) 967-7236</p>\r\n      </div>\r\n      <div className=\"linkedin\">\r\n        <p className=\"linked\">\r\n          <a\r\n            href=\"https://www.linkedin.com/in/ian-canupp-5b79b9141/\"\r\n            className=\"link\"\r\n          >\r\n            LinkedIn Profile\r\n          </a>\r\n        </p>\r\n        <p className=\"github\">\r\n          <a href=\"https://github.com/iancanupp\" className=\"link\">\r\n            GitHub Profile\r\n          </a>\r\n        </p>\r\n      </div>\r\n      <div className=\"socials\">\r\n        <h1 className=\"email\">Instagram</h1>\r\n        <a\r\n          className=\"email-content\"\r\n          href=\"https://www.instagram.com/iancanupp/\"\r\n        >\r\n          @iancanupp\r\n        </a>\r\n        <h1 className=\"phone\">Twitter</h1>\r\n        <a className=\"phone-content\" href=\"https://twitter.com/alwaysplanahe\">\r\n          @alwaysplanahe\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\nimport { Switch } from \"react-router\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar/Navbar.js\";\nimport Home from \"./pages/Home.js\";\nimport DevSkills from \"./pages/DevSkills.js\";\nimport Contact from \"./pages/Contact.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/skills\" component={DevSkills} />\n          <Route exact path=\"/contact\" component={Contact} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}