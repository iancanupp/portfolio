{"version":3,"sources":["components/Navbar/MenuItems.js","components/Button.js","components/Navbar/Navbar.js","pages/Home.js","pages/DevSkills.js","pages/Contact.js","App.js","serviceWorker.js","index.js"],"names":["MenuItems","title","link","cName","STYLES","SIZES","Button","children","type","onClick","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize","className","Navbar","useState","clicked","setClicked","map","item","index","key","to","href","action","Home","DevSkills","Contact","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sUAAaA,EAAY,CACvB,CACEC,MAAO,OACPC,KAAM,IACNC,MAAO,aAET,CACEF,MAAO,mBACPC,KAAM,UACNC,MAAO,aAET,CACEF,MAAO,aACPC,KAAM,WACNC,MAAO,aAET,CACEF,MAAO,sBACPC,KAAM,oDACNC,MAAO,qBChBLC,G,MAAS,CAAC,eAAgB,iBAE1BC,EAAQ,CAAC,cAAe,cAEjBC,EAAS,SAAC,GAMhB,IALLC,EAKI,EALJA,SACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,WAEMC,EAAmBR,EAAOS,SAASH,GACrCA,EACAN,EAAO,GAELU,EAAkBT,EAAMQ,SAASF,GAAcA,EAAaN,EAAM,GAExE,OACE,4BACEU,UAAS,cAASH,EAAT,YAA6BE,GACtCL,QAASA,EACTD,KAAMA,GAELD,ICeQS,G,MAnCA,WAAO,IAAD,EACWC,oBAAS,GADpB,mBACZC,EADY,KACHC,EADG,KAOnB,OACE,yBAAKJ,UAAU,eACb,wBAAIA,UAAU,eACZ,uBAAGA,UAAU,iBADf,cAGA,yBAAKA,UAAU,YAAYN,QATX,WAClBU,GAAYD,KASR,uBAAGH,UAAWG,EAAU,eAAiB,iBAE3C,wBAAIH,UAAWG,EAAU,kBAAoB,YAC1ClB,EAAUoB,KAAI,SAACC,EAAMC,GACpB,OACE,wBAAIC,IAAKD,GACP,kBAAC,IAAD,CAAME,GAAIH,EAAKnB,MACb,uBAAGa,UAAWM,EAAKlB,MAAOsB,KAAMJ,EAAKnB,MAClCmB,EAAKpB,aAOlB,0BAAMyB,OAAO,qDACX,kBAAC,EAAD,gCCqBOC,G,MArDF,WACX,OACE,yBAAKZ,UAAU,QACb,wBAAIA,UAAU,eAAd,YACA,uBAAGA,UAAU,YAAb,4xBAcA,uBAAGA,UAAU,YAAb,4yBAcA,uBAAGA,UAAU,YAAb,yWAOA,uBAAGA,UAAU,YAAb,0cASA,uBAAGA,UAAU,QAAb,mBCzCSa,EARG,WAChB,OACE,6BACE,kECQSC,EAXC,WACd,OACE,yBAAKd,UAAU,WACb,wBAAIA,UAAU,gBAAd,SACA,uBAAGA,UAAU,gBAAb,uBACA,wBAAIA,UAAU,gBAAd,SACA,uBAAGA,UAAU,gBAAb,oBCgBSe,MAff,WACE,OACE,yBAAKf,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOgB,OAAK,EAACC,KAAK,IAAIC,UAAWN,IACjC,kBAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,UAAUC,UAAWL,IACvC,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,WAAWC,UAAWJ,QCL9BK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6f7e5f4a.chunk.js","sourcesContent":["export const MenuItems = [\r\n  {\r\n    title: \"Home\",\r\n    link: \"/\",\r\n    cName: \"nav-links\",\r\n  },\r\n  {\r\n    title: \"Developer Skills\",\r\n    link: \"/skills\",\r\n    cName: \"nav-links\",\r\n  },\r\n  {\r\n    title: \"Contact Me\",\r\n    link: \"/contact\",\r\n    cName: \"nav-links\",\r\n  },\r\n  {\r\n    title: \"My LinkedIn Profile\",\r\n    link: \"https://www.linkedin.com/in/ian-canupp-5b79b9141/\",\r\n    cName: \"nav-links-mobile\",\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport \"./Button.css\";\r\n\r\nconst STYLES = [\"btn--primary\", \"btn--outline\"];\r\n\r\nconst SIZES = [\"btn--medium\", \"btn--large\"];\r\n\r\nexport const Button = ({\r\n  children,\r\n  type,\r\n  onClick,\r\n  buttonStyle,\r\n  buttonSize,\r\n}) => {\r\n  const checkButtonStyle = STYLES.includes(buttonStyle)\r\n    ? buttonStyle\r\n    : STYLES[0];\r\n\r\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\r\n\r\n  return (\r\n    <button\r\n      className={`btn ${checkButtonStyle} ${checkButtonSize}`}\r\n      onClick={onClick}\r\n      type={type}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MenuItems } from \"./MenuItems\";\r\nimport { Button } from \"../Button.js\";\r\nimport \"./Navbar.css\";\r\n\r\nconst Navbar = () => {\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setClicked(!clicked);\r\n  };\r\n\r\n  return (\r\n    <nav className=\"NavbarItems\">\r\n      <h1 className=\"navbar-logo\">\r\n        <i className=\"fab fa-react\"></i> Portfolio\r\n      </h1>\r\n      <div className=\"menu-icon\" onClick={handleClick}>\r\n        <i className={clicked ? \"fas fa-times\" : \"fas fa-bars\"}></i>\r\n      </div>\r\n      <ul className={clicked ? \"nav-menu active\" : \"nav-menu\"}>\r\n        {MenuItems.map((item, index) => {\r\n          return (\r\n            <li key={index}>\r\n              <Link to={item.link}>\r\n                <a className={item.cName} href={item.link}>\r\n                  {item.title}\r\n                </a>\r\n              </Link>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      <form action=\"https://www.linkedin.com/in/ian-canupp-5b79b9141/\">\r\n        <Button>My LinkedIn Profile</Button>\r\n      </form>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./Pages.css\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"home\">\r\n      <h1 className=\"home-header\">About Me</h1>\r\n      <p className=\"home-par\">\r\n        Hey! Thanks for checking out my portfolio, my name is Ian Canupp and I'm\r\n        a software engineer located in Cincinnati, Ohio. I graduated in May of\r\n        2019 with a B.S. in Computer Science from Centre College and since then,\r\n        have put a whole year of professional experience under my belt at a\r\n        company called Flooid. Throughout my education and early career, I find\r\n        that back end technologies such as Java, SQL and MongoDB have been a\r\n        large focus, and therefore a large strength of mine. However, quarantine\r\n        has given me ample time to jump head first into many different projects,\r\n        the latest of which is actually this very website. I'm constantly trying\r\n        to learn new things, which right now include Golang and more React\r\n        experience, something I'll talk in more depth about in the Developer\r\n        Skills tab.\r\n      </p>\r\n      <p className=\"home-par\">\r\n        Outside of computer science I'm a huge basketball fan, specifically the\r\n        New York Knicks. I understand that anyone who watches even a little NBA\r\n        is questioning my sanity and decision making at this moment, and to that\r\n        I say, so have I for the past few years. This passion for the sport has\r\n        opened the way for me to discover the fasinating world of analytics that\r\n        lies beneath. It is my goal in the near future to combine my accumulated\r\n        understanding of these analytics with my budding front end development\r\n        knowledge to create a player comparison app, so I might be able to tell\r\n        you-with the data in front of me-exactly how and why the Knicks haven't\r\n        been near playoffs in over a decade. In fact, sports data analytics\r\n        would be something of a dream job, but for now I'm happy to figure it\r\n        out in my apartment.\r\n      </p>\r\n      <p className=\"home-par\">\r\n        To cap off the at-a-glance version of myself, I did my study abroad in\r\n        the 'Heart of Europe,' Strasbourg, France where I began to study the\r\n        French language. At risk of sounding like every other student who spend\r\n        any time outside the US, I had an amazing abroad experience and continue\r\n        to make efforts to maintain and build on the French I studied in school.\r\n      </p>\r\n      <p className=\"home-par\">\r\n        And with that cursory introduction I feel as if I've painted you a\r\n        fairly accurate portrait. Of course, if you have questions about\r\n        anything I've said here or anything I'll say in the next tab over, I\r\n        would love for you to reach out so that we can discuss and clarify\r\n        anything I might have left overly vague. Again, thank you for taking the\r\n        time to navigate to this site to learn more about me. It is greatly\r\n        appreciated and I hope to hear from you soon.\r\n      </p>\r\n      <p className=\"sign\">- Ian Canupp</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nconst DevSkills = () => {\r\n  return (\r\n    <div>\r\n      <h1>Here are the things I'm good at!</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DevSkills;\r\n","import React from \"react\";\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <div className=\"contact\">\r\n      <h1 className=\"contact-part\">Email</h1>\r\n      <p className=\"contact-part\">canuppian@gmail.com</p>\r\n      <h1 className=\"contact-part\">Phone</h1>\r\n      <p className=\"contact-part\">(615) 967-7236</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\nimport { Switch } from \"react-router\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar/Navbar.js\";\nimport Home from \"./pages/Home.js\";\nimport DevSkills from \"./pages/DevSkills.js\";\nimport Contact from \"./pages/Contact.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/skills\" component={DevSkills} />\n          <Route exact path=\"/contact\" component={Contact} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}